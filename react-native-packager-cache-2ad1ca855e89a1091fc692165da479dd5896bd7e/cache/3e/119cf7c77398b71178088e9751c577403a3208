

'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/vh/Documents/Qkn/Sample/SampleProject/StockLineChartDynamicTickLabels.js';

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require('react-native');

var _StockLine = require('./StockLine');

var _StockLine2 = babelHelpers.interopRequireDefault(_StockLine);

var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: '#f7f7f7'
  }
});

var StockLineChartDynamicTickLabels = function (_Component) {
  babelHelpers.inherits(StockLineChartDynamicTickLabels, _Component);

  function StockLineChartDynamicTickLabels() {
    babelHelpers.classCallCheck(this, StockLineChartDynamicTickLabels);
    return babelHelpers.possibleConstructorReturn(this, (StockLineChartDynamicTickLabels.__proto__ || Object.getPrototypeOf(StockLineChartDynamicTickLabels)).apply(this, arguments));
  }

  babelHelpers.createClass(StockLineChartDynamicTickLabels, [{
    key: 'render',
    value: function render() {
      var data = [[{
        "x": 0,
        "y": 47782
      }, {
        "x": 1,
        "y": 48497
      }, {
        "x": 2,
        "y": 77128
      }, {
        "x": 3,
        "y": 73413
      }, {
        "x": 5,
        "y": 90000
      }]];
      var options = {
        width: 250,
        height: 250,
        color: '#2980B9',
        margin: {
          top: 10,
          left: 35,
          bottom: 30,
          right: 10
        },
        animate: {
          type: 'delayed',
          duration: 200
        },
        axisX: {
          showAxis: true,
          showLines: true,
          showLabels: true,
          showTicks: true,
          zeroAxis: false,
          orient: 'bottom',
          tickValues: [],
          labelFunction: function labelFunction(v) {

            return v;
          },
          label: {
            fontFamily: 'Arial',
            fontSize: 8,
            fontWeight: true,
            fill: '#34495E'
          }
        },
        axisY: {
          showAxis: true,
          showLines: true,
          showLabels: true,
          showTicks: true,
          zeroAxis: false,
          orient: 'left',
          tickValues: [],
          label: {
            fontFamily: 'Arial',
            fontSize: 8,
            fontWeight: true,
            fill: '#34495E'
          }
        }
      };

      return _react2.default.createElement(
        _reactNative.View,
        { style: styles.container, __source: {
            fileName: _jsxFileName,
            lineNumber: 110
          }
        },
        _react2.default.createElement(_StockLine2.default, { data: data, options: options, xKey: 'x', yKey: 'y', __source: {
            fileName: _jsxFileName,
            lineNumber: 111
          }
        })
      );
    }
  }]);
  return StockLineChartDynamicTickLabels;
}(_react.Component);

StockLineChartDynamicTickLabels.navigationOptions = function (_ref) {
  var navigation = _ref.navigation;
  return {
    title: 'StockLine - Dynamic Labels'
  };
};

exports.default = StockLineChartDynamicTickLabels;